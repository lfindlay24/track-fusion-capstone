swagger: "2.0"
info:
  version: "1.0.0"
  title: "Track Fusion API"
  description: "The OpenAPI specification for the Track Fusion API."
host: track-fusion-2o0rhes6zm6uc.apigateway.utahjazz24.cloud.goog

# x-google-backend:
#   address: https://us-central1-utahjazz24.cloudfunctions.net/function-1

basePath: "/trackfusion"
schemes:
  - "https"
security:
  - api_key: []

consumes:
  - "application/json"  # Expected content type for requests.
produces:
  - "application/json"  # Content type for responses.

paths:
  /users:
    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/getAllUsers_Function
      summary: "Retrieve a list of users"
      description: "Returns a list of users."
      operationId: "getUsers"
      parameters: []
      responses:
        200:
          description: "An array of users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        500:
          description: "Internal server error"

    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/createUserFunction
      summary: "Create a new user"
      description: "Creates a new user with the provided information."
      operationId: "createUser"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "User created successfully"
        400:
          description: "Invalid input"

  /users/{userId}:
    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/GetUserByIdFunction
      summary: "Retrieve a specific user by ID"
      description: "Returns a single user."
      operationId: "getUserById"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to retrieve"
      responses:
        200:
          description: "User details"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"

    put:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/UpdateUserFunction
      summary: "Update an existing user"
      description: "Updates the details of an existing user."
      operationId: "updateUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to update"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "User updated successfully"
        404:
          description: "User not found"

    delete:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/DeleteUserFunction
      summary: "Delete a user"
      description: "Deletes the specified user."
      operationId: "deleteUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to delete"
      responses:
        204:
          description: "User deleted successfully"
        404:
          description: "User not found"

  /garageGroups:
    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/getAllGarageGroupsFunction
      summary: "Retrieve a list of garage groups"
      description: "Returns a list of garage groups."
      operationId: "getGarageGroups"
      parameters: []
      responses:
        200:
          description: "An array of garage groups"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GarageGroup"
        500:
          description: "Internal server error"

    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/createGarageGroupFunction
      summary: "Create a new garage group"
      description: "Creates a new garage group with the provided information."
      operationId: "createGarageGroup"
      parameters:
        - in: "body"
          name: "body"
          description: "Garage group object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/GarageGroup"
      responses:
        201:
          description: "Garage group created successfully"
        400:
          description: "Invalid input"
    
  /garageGroups/{groupId}:
    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/addMessageToGroupFunction
      summary: "Add a message to a garage group"
      description: "Adds a message to the specified garage group."
      operationId: "addMessageToGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group"
        - in: "body"
          name: "body"
          description: "Message object to add"
          required: true
          schema:
            $ref: "#/definitions/Message"
      responses:
        200:
          description: "Message added to garage group successfully"
        404:
          description: "Garage group not found"

    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/getGarageGroupByIdFunction
      summary: "Retrieve a specific garage group by ID"
      description: "Returns a single garage group."
      operationId: "getGarageGroupById"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group to retrieve"
      responses:
        200:
          description: "Garage group details"
          schema:
            $ref: "#/definitions/GarageGroup"
        404:
          description: "Garage group not found"

    put:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/updateGarageGroupFunction
      summary: "Update an existing garage group"
      description: "Updates the details of an existing garage group."
      operationId: "updateGarageGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group to update"
        - in: "body"
          name: "body"
          description: "Updated garage group object"
          required: true
          schema:
            $ref: "#/definitions/GarageGroup"
      responses:
        200:
          description: "Garage group updated successfully"
        404:
          description: "Garage group not found"

    delete:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/deleteGarageGroupFunction
      summary: "Delete a garage group"
      description: "Deletes the specified garage group."
      operationId: "deleteGarageGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group to delete"
      responses:
        204:
          description: "Garage group deleted successfully"
        404:
          description: "Garage group not found"
    
  /garageGroups/{groupId}/{userId}:
    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/addUserToGarageGroupFunction
      summary: "Add a user to a garage group"
      description: "Adds a user to the specified garage group."
      operationId: "addUserToGarageGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group"
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to add"
      responses:
        200:
          description: "User added to garage group successfully"
        404:
          description: "Garage group or user not found"
      
    delete:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/removeUserFromGarageGroupFunction
      summary: "Remove a user from a garage group"
      description: "Removes a user from the specified garage group."
      operationId: "removeUserFromGarageGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the garage group"
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to remove"
      responses:
        204:
          description: "User removed from garage group successfully"
        404:
          description: "Garage group or user not found"
  /garageGroups/search/{searchTerm}:
    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/searchGarageGroupsFunction
      summary: "Search for garage groups"
      description: "Searches for garage groups based on the provided search term."
      operationId: "searchGarageGroups"
      parameters:
        - name: "searchTerm"
          in: "path"
          required: true
          type: "string"
          description: "Search term to use"
      responses:
        200:
          description: "An array of garage groups matching the search term"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GarageGroup"
        404:
          description: "No garage groups found"
  /login:
    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/loginFunction
      summary: "Login to the application"
      description: "Logs a user into the application."
      operationId: "login"
      parameters:
        - in: "body"
          name: "body"
          description: "User credentials for login"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                description: "Email of the user"
              password:
                type: "string"
                description: "Password of the user"
      responses:
        200:
          description: "Login successful"
        401:
          description: "Invalid credentials"
  /raceData:
    post:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/uploadRaceDataFunction
      summary: "Upload an instance of race data to the database"
      description: "Uploads an instance"
      operationId: "uploadRaceData"
      parameters:
        - in: "body"
          name: "body"
          description: "The race data to be uploaded"
          required: true
          schema:
            $ref: "#/definitions/RaceModeData"
      responses:
        201:
          description: "Succussfully uploaded"
        400:
          description: "Invalid input"
  /raceData/{userId}:
    get:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/getRaceDataFunction
      summary: "Retrieve all race data from a specific user"
      description: "Returns the race data for a specific user."
      operationId: "getRaceData"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to retrieve"
      responses:
        200:
          description: "Got all Race Data Instances"
        404:
          description: "User not found"
  /raceData/{userId}/{raceId}:
    delete:
      x-google-backend:
        address: https://us-central1-utahjazz24.cloudfunctions.net/deleteRaceDataFunction
      summary: "Delete"
      description: "Deletes the specified race data."
      operationId: "deleteRaceData"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the user to delete"
        - name: "raceId"
          in: "path"
          required: true
          type: "string"
          description: "ID of the race data to delete"
      responses:
        204:
          description: "Successfully deleted"
        404:
          description: "User not found"


definitions:
  Message:
    required:
      - "userId"
      - "text"
      - "time"
    properties:
      userId:
        type: "string"
        description: "ID of the user posting the message"
      message:
        type: "string"
        description: "Content of the message"
      time:
        type: "integer"
        format: "date-time"
        description: "Time when the message was posted"
  User:
    type: "object"
    required:
      - "id"
      - "name"
      - "email"
      - "password"
      - "isPremiumAccount"
    properties:
      id:
        type: "string"
        description: "Unique identifier for the user"
      name:
        type: "string"
        description: "Name of the user"
      email:
        type: "string"
        description: "Email of the user"
      password:
        type: "string"
        description: "Password of the user"
      isPremiumAccount:
        type: "boolean"
        description: "Flag indicating if the user has a premium account"
  GarageGroup:
    required:
      - "id"
      - "groupName"
      - "members"
    properties:
      id:
        type: "string"
        description: "Unique identifier for the garage group"
      groupName:
        type: "string"
        description: "Name of the garage group"
      members:
        type: "array"
        items:
          type: "string"
        description: "List of user IDs that are members of the group"
  RaceModeData:
    required:
      - "userId"
      - "raceTime"
      - "raceDistance"
      - "raceLocation"
      - "recordingEvents"
    properties:
      userId:
        type: "string"
        format: "date-time"
      raceTime:
        type: "string"
        format: "date-time"
        description: "Time when the race took place"
      raceDistance:
        type: "number"
        format: "float"
        description: "Distance covered in the race"
      raceLocation:
        type: "string"
        description: "Location where the race took place"
      recordingEvents:
        type: "array"
        items:
          $ref: "#/definitions/RaceRecordingEvent"
        description: "List of recordings"
  RaceRecordingEvent:
    type: "object"
    required:
      - "speed"
      - "gForce"
      - "lat"
      - "long"
      - "time"
    properties:
      speed:
        type: "number"
        format: "float"
        description: "Speed of the recording event"
      gForce:
        type: "object"
        description: "User accelerometer event data"
        properties:
          x:
            type: "number"
            format: "float"
            description: "Acceleration force along the X axis"
          y:
            type: "number"
            format: "float"
            description: "Acceleration force along the Y axis"
          z:
            type: "number"
            format: "float"
            description: "Acceleration force along the Z axis"
      lat:
        type: "number"
        format: "float"
        description: "Latitude of the recording event"
      long:
        type: "number"
        format: "float"
        description: "Longitude of the recording event"
      time:
        type: "string"
        format: "date-time"
        description: "Time when the recording event occurred"
